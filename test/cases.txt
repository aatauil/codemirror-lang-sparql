# Namespace

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT * WHERE {
  ?sub ?pred ?obj .
} LIMIT 10

==>

Unit(
  Query(
    Prologue(
      PrefixDecl(
        PREFIX
        Pname_ns,
        IriRef
      )
    )
    SelectQuery(
      SelectClause (
        SELECT
      )
      WhereClause(
        WHERE
        GroupGraphPattern(
          GroupGraphPatternSub (
            TriplesBlock (
              TriplesSameSubjectPath (
                VarOrTerm (
                  Var
                )
                PropertyListPathNotEmpty (
                  VerbSimple (
                    Var
                  )
                  ObjectListPath (
                    ObjectPath (
                      GraphNodePath (
                        VarOrTerm (
                          Var
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
      SolutionModifier (
        LimitOffsetClauses (
          LimitClause (
            LIMIT
            Integer
          )
        )
      )
    )
    ValuesClause
  )
)

# parse "a" as PathPrimary instead of parse error

SELECT * WHERE {
  ?sub a ?aClass .
}

==>

Unit(
  Query(
    Prologue,
    SelectQuery(
      SelectClause(
        SELECT
      ),
      WhereClause(
        WHERE,
        GroupGraphPattern(
          GroupGraphPatternSub(
            TriplesBlock(
              TriplesSameSubjectPath(
                VarOrTerm(
                  Var
                ),
                PropertyListPathNotEmpty(
                  VerbPath(
                    Path(
                      PathAlternative(
                        PathSequence(
                          PathEltOrInverse(
                            PathElt(
                              PathPrimary(
                                A_predicate
                              )
                            )
                          )
                        )
                      )
                    )
                  ),
                ObjectListPath(
                  ObjectPath(
                    GraphNodePath(
                      VarOrTerm(
                        Var
                      )
                    )
                  )
                )
              )
            ),
            "."
          )
        )
      )
    ),
    SolutionModifier),
  ValuesClause))

# example from demo

SELECT DISTINCT ?painter ?painterLabel (count (DISTINCT ?exhibition) as ?exhibition_count) 
(group_concat(DISTINCT ?exhibitionLabel; separator=", ") as ?exhibitions)
WHERE {
  ?painter wdt:P106 wd:Q1028181 . #give me all people with occupation (P106) painter (Q1028181)
  ?painter wdt:P135 wd:Q40415 . #who belonged to the impressionist (Q40415) movement (P135)  
  ?painting wdt:P170  ?painter . #the paintings created by (P170) the painter
  ?painting wdt:P608 ?exhibition . #have an exhibition history (P608) at an exhibition
  ?exhibition rdfs:label ?exhibitionLabel . #give me the english Labels of these exhibitions, if possible
  FILTER (lang(?exhibitionLabel) = "en") 

  SERVICE wikibase:label {bd:serviceParam wikibase:language "en".}
} GROUP BY ?painter ?painterLabel

==>

Unit(Query(Prologue,SelectQuery(SelectClause(SELECT,DISTINCT,Var,Var,Expression(ConditionalOrExpression(ConditionalAndExpression(ValueLogical(RelationalExpression(NumericExpression(AdditiveExpression(MultiplicativeExpression(UnaryExpression(PrimaryExpression(BuiltInCall(Aggregate(COUNT,DISTINCT,Expression(ConditionalOrExpression(ConditionalAndExpression(ValueLogical(RelationalExpression(NumericExpression(AdditiveExpression(MultiplicativeExpression(UnaryExpression(PrimaryExpression(Var)))))))))))))))))))))),AS,Var,Expression(ConditionalOrExpression(ConditionalAndExpression(ValueLogical(RelationalExpression(NumericExpression(AdditiveExpression(MultiplicativeExpression(UnaryExpression(PrimaryExpression(BuiltInCall(Aggregate(GROUP_CONCAT,DISTINCT,Expression(ConditionalOrExpression(ConditionalAndExpression(ValueLogical(RelationalExpression(NumericExpression(AdditiveExpression(MultiplicativeExpression(UnaryExpression(PrimaryExpression(Var)))))))))),";",SEPARATOR,String)))))))))))),AS,Var),WhereClause(WHERE,GroupGraphPattern(GroupGraphPatternSub(TriplesBlock(TriplesSameSubjectPath(VarOrTerm(Var),PropertyListPathNotEmpty(VerbPath(Path(PathAlternative(PathSequence(PathEltOrInverse(PathElt(PathPrimary(Iri(PrefixedName(Pname_ln))))))))),ObjectListPath(ObjectPath(GraphNodePath(VarOrTerm(GraphTerm(Iri(PrefixedName(Pname_ln))))))))),".",Comment,TriplesBlock(TriplesSameSubjectPath(VarOrTerm(Var),PropertyListPathNotEmpty(VerbPath(Path(PathAlternative(PathSequence(PathEltOrInverse(PathElt(PathPrimary(Iri(PrefixedName(Pname_ln))))))))),ObjectListPath(ObjectPath(GraphNodePath(VarOrTerm(GraphTerm(Iri(PrefixedName(Pname_ln))))))))),".",Comment,TriplesBlock(TriplesSameSubjectPath(VarOrTerm(Var),PropertyListPathNotEmpty(VerbPath(Path(PathAlternative(PathSequence(PathEltOrInverse(PathElt(PathPrimary(Iri(PrefixedName(Pname_ln))))))))),ObjectListPath(ObjectPath(GraphNodePath(VarOrTerm(Var)))))),".",Comment,TriplesBlock(TriplesSameSubjectPath(VarOrTerm(Var),PropertyListPathNotEmpty(VerbPath(Path(PathAlternative(PathSequence(PathEltOrInverse(PathElt(PathPrimary(Iri(PrefixedName(Pname_ln))))))))),ObjectListPath(ObjectPath(GraphNodePath(VarOrTerm(Var)))))),".",Comment,TriplesBlock(TriplesSameSubjectPath(VarOrTerm(Var),PropertyListPathNotEmpty(VerbPath(Path(PathAlternative(PathSequence(PathEltOrInverse(PathElt(PathPrimary(Iri(PrefixedName(Pname_ln))))))))),ObjectListPath(ObjectPath(GraphNodePath(VarOrTerm(Var)))))),"."))))),Comment,GraphPatternNotTriples(Filter(FILTER,Constraint(BrackettedExpression(Expression(ConditionalOrExpression(ConditionalAndExpression(ValueLogical(RelationalExpression(NumericExpression(AdditiveExpression(MultiplicativeExpression(UnaryExpression(PrimaryExpression(BuiltInCall(LANG,Expression(ConditionalOrExpression(ConditionalAndExpression(ValueLogical(RelationalExpression(NumericExpression(AdditiveExpression(MultiplicativeExpression(UnaryExpression(PrimaryExpression(Var)))))))))))))))),NumericExpression(AdditiveExpression(MultiplicativeExpression(UnaryExpression(PrimaryExpression(RDFLiteral(String))))))))))))))),GraphPatternNotTriples(ServiceGraphPattern(SERVICE,VarOrIri(Iri(PrefixedName(Pname_ln))),GroupGraphPattern(GroupGraphPatternSub(TriplesBlock(TriplesSameSubjectPath(VarOrTerm(GraphTerm(Iri(PrefixedName(Pname_ln)))),PropertyListPathNotEmpty(VerbPath(Path(PathAlternative(PathSequence(PathEltOrInverse(PathElt(PathPrimary(Iri(PrefixedName(Pname_ln))))))))),ObjectListPath(ObjectPath(GraphNodePath(VarOrTerm(GraphTerm(RDFLiteral(String)))))))),".")))))))),SolutionModifier(GroupClause(GROUP,BY,GroupCondition(Var),GroupCondition(Var)))),ValuesClause))
